---
name: CI

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
  push:
    tags:
      - v*
    paths-ignore:
      - '**/*.md'

env:
  BOOST_VERSION: 1.75.0

jobs:
  build:
    name: "Build ${{ matrix.config.os }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "ubuntu-18.04"
            std: "17"
          - os: "ubuntu-20.04"
            std: "17"
          - os: "ubuntu-22.04"
            std: "17"
    steps:
      - id: config
        name: Generate Artefact name
        run: |
          artefact_name="boost-${{ env.BOOST_VERSION }}-cpp${{ matrix.config.std }}-${{ matrix.config.os }}-x64.tar.gz"
          echo "artefact_name=$artefact_name" >> $GITHUB_OUTPUT
      - name: Checkout Boost
        uses: actions/checkout@v3
        with:
          repository: boostorg/boost
          ref: boost-${{ env.BOOST_VERSION }}
          path: boost
          submodules: recursive
      - name: Build Boost
        working-directory: boost
        run: |
          ./bootstrap.sh --prefix="${{ github.workspace }}/opt/boost${{ matrix.config.std }}"
          ./b2 -j$(nproc) install cxxflags="-std=c++${{ matrix.config.std }} -fPIC" linkflags="-std=c++${{ matrix.config.std }} -fPIC" link=static
      - name: Archive boost
        working-directory: ${{ github.workspace }}/opt
        run: cmake -E tar cJfv "${{ steps.config.outputs.artefact_name }}" boost${{ matrix.config.std }}
      - name: Upload artefact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.config.outputs.artefact_name }}"
          path: "${{ github.workspace }}/opt/${{ steps.config.outputs.artefact_name }}"

  release:
    if: contains(github.ref, 'tags/v')

    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  publish:
    if: contains(github.ref, 'tags/v')

    name: "Publish ${{ matrix.config.os }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "ubuntu-18.04"
            std: "17"
          - os: "ubuntu-20.04"
            std: "17"
          - os: "ubuntu-22.04"
            std: "17"
    needs: release

    steps:
      - id: config
        run: |
          artefact_name="boost-${{ env.BOOST_VERSION }}-cpp${{ matrix.config.std }}-${{ matrix.config.os }}-x64.tar.gz"
          echo "artefact_name=$artefact_name" >> $GITHUB_OUTPUT
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: "${{ steps.config.outputs.artefact_name }}"
          path: ./
      - name: Upload to Release
        id: upload_to_release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: "./${{ steps.config.outputs.artefact_name }}"
          asset_name: "${{ steps.config.outputs.artefact_name }}"
          asset_content_type: application/x-gtar


